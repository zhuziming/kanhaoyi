<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	
	<!-- 增加shiro的相关配置操作 -->
	<!-- 启动在Shiro里面进行Annotation的相关验证处理操作 -->
	<bean id="controllerDefaultAdvisorAutoProxyCreator"
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<!-- 进行目标程序类的代理控制 -->
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<!-- 针对于安全管理实现的AOP处理操作 -->
	<bean id="controllerAuthorizationAttributeSourceAdvisor"
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	
	<!-- 启用注解 -->
	<mvc:annotation-driven />
	<!-- 用默认的servlet处理请求 -->
	<mvc:default-servlet-handler />
	<!-- 扫描包 -->
	<context:component-scan base-package="com.kanhaoyi.www" />
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
<!-- 静态访问权限控制 
	<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/> 
	<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/> 
	<mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/> 
-->
	<!-- 指定视图层技术为Freemarker -->
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<!-- 视图层模块的加载路径 -->
		<property name="templateLoaderPath" value="/WEB-INF/classes/ftl" />
		<!-- 默认的格式编码 -->
		<property name="defaultEncoding" value="UTF-8" />
	</bean>
	<!-- 配置servlet返回的文件后缀 与文件类型 -->
	<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean> 
    
    
    
    
    <!-- 引入shiro配置 
    <import resource="classpath:/springmvc-shiro.xml"/>
    -->
</beans>